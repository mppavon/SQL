# For this project, I analyzed spotify music data
# I created the following table and then input the data from an external file

CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
song_key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
song_mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness decimal(8,7) NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL );


# To explore the data I first queryed what the most popular rating is and what the most popular songs are
SELECT max(popularity) FROM BIT_DB.Spotifydata;
SELECT popularity, track_name FROM BIT_DB.Spotifydata
where popularity=95
group by track_name;

# Comparison between songs in the top 10% and lower 80% rating and how danceability relates to the scores
select popularity, artist_name, track_name, danceability FROM BIT_DB.Spotifydata
where popularity >=90
order by danceability asc;
select popularity, artist_name, track_name, danceability FROM BIT_DB.Spotifydata
where popularity <=80
order by danceability asc;

# Querying all artists with ratings above 90 on popularity
select count(popularity), artist_name from BIT_DB.Spotifydata
where popularity >= 90
group by artist_name;

# Querying all the songs by Olivia Rodrigo that scored above 90 on popularity
select popularity, artist_name, track_name FROM BIT_DB.Spotifydata
where popularity >=90
and artist_name like'%Olivia Rodrigo%';

# Querying the averagesa for popularity, danceability, and energy for all artists and songs
select artist_name, track_name, avg(popularity), avg(danceability), avg(energy) from BIT_DB.Spotifydata
group by artist_name, track_name
order by avg(popularity) desc;


